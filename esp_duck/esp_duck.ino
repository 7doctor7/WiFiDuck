#include <Wire.h>

#define MESSAGE_SIZE 16
#define BUFFER_SIZE 256

void sendMessage(String msg) {
    int transmissions = msg.length() / MESSAGE_SIZE;

    if (msg.length() % MESSAGE_SIZE != 0) ++transmissions;

    int j = 0;

    for (int i = 0; i<transmissions; i++) {
        if(j % BUFFER_SIZE >= BUFFER_SIZE - MESSAGE_SIZE) delay(BUFFER_SIZE * 2);
        
        Wire.beginTransmission(0x31);

        for (int k = 0; k<16 && j<msg.length(); k++) {
            Wire.write(msg[j]);
            ++j;
        }

        Wire.endTransmission();
    }
}

void setup() {
    Serial.begin(115200);
    Serial.println();
    Wire.begin(5, 4); // join i2c bus (address optional for master)

    Wire.requestFrom(0x31, 1);
    if (Wire.available()) {
        Serial.println("Connected");
        Wire.read();
    } else {
        Serial.println("Connection error");
    }
    
    sendMessage("REM ###############\n");
    sendMessage("REM # Connection! #\n");
    sendMessage("REM ###############\n");
    
    sendMessage("GUI r\n");
    
    //sendMessage("STRING Hello World\r\n");

    sendMessage("STRING 11 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 0123456789001234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 01234567890 11\r\n");
    
    sendMessage(" DEFAULTDELAY 12 \n");
    sendMessage("DELAY 1  \r\n");
    sendMessage("REPEAT  2\n");
    sendMessage("F12   \n");
}

void loop() {}
